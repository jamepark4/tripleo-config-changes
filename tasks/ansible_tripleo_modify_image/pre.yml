- name: make copy of containers-prepare-parameter.yaml
  copy:
      src: "~/containers-prepare-parameter.yaml"
      dest: "~/containers-prepare-parameter-copy.yaml"
      remote_src: yes

- name: get overcloud_version
  shell: cat /etc/rhosp-release  |awk -F"." '{print $1}'| awk '{print $6}'
  register: rhosp_release

- set_fact:
    rhosp_version: "{{ rhosp_release.stdout }}"

- name: create /home/stack/{{ test.tripleo.modify.container }}-modify-dir  directory
  file:
    path: ~/{{ test.tripleo.modify.container }}-modify-dir
    state: directory
  when: test.tripleo.modify.method == "rpm" or test.tripleo.modify.method == "modify-image"

- name: download test package to node
  get_url:
    url: " {{ test.tripleo.modify.url }} "
    dest: ~/{{ test.tripleo.modify.container }}-modify-dir
  when: test.tripleo.modify.method == "rpm" or test.tripleo.modify.method == "modify-image"

- name: Slurp container prepare parameter
  slurp:
    src: "{{ ansible_env.HOME }}/containers-prepare-parameter.yaml"
  register: slurp_containers_prepare_parameter

- name: Set container prepare parameter facts
  set_fact:
    containers_prepare_parameter: "{{ slurp_containers_prepare_parameter['content'] | b64decode | from_yaml }}"

- name: Set job facts
  set_fact:
    name_prefix: "{{ containers_prepare_parameter['parameter_defaults']['ContainerImagePrepare'][0]['set']['name_prefix'] }}"
    name_suffix: "{{ containers_prepare_parameter['parameter_defaults']['ContainerImagePrepare'][0]['set']['name_suffix'] }}"
    namespace: "{{ containers_prepare_parameter['parameter_defaults']['ContainerImagePrepare'][0]['set']['namespace'] }}"
    tag: "{{ containers_prepare_parameter['parameter_defaults']['ContainerImagePrepare'][0]['set']['tag'] }}"

- name: Generate container prepare parameter copy
  copy:
    content: |
      {% set original = containers_prepare_parameter %}
      {%
        set item = {
          "push_destination": true,
          "set": {
            "name_prefix": (name_prefix | string),
            "name_suffix": (name_suffix | string),
            "namespace": (namespace | string),
            "tag": (tag | string)
          },
          "includes": [
              (test.tripleo.modify.container | string)
          ],
          "modify_role": "tripleo-modify-image",
          "modify_append_tag": "-hotfix"
        }
      %}
      {% if test.tripleo.modify.method == "rpm" %}
      {%
        set modify = {
          "modify_vars": {
            "tasks_from": "rpm_install.yml",
            "rpms_path": "/home/stack/" ~ test.tripleo.modify.container ~ "-modify-dir"
          }
        }
      %}
      {% elif test.tripleo.modify.method == "yum-update" %}
      {%
        set modify = {
          "modify_vars": {
            "tasks_from": "yum_update.yml",
            "compare_host_packages": true,
            "yum_repos_dir_path": "/etc/yum.repos.d"
          }
        }
      %}
      {% elif test.tripleo.modify.method == "modify-image" %}
      {%
        set modify = {
          "modify_vars": {
            "tasks_from": "modify_image.yml",
            "modify_dir_path": "/home/stack/" ~ test.tripleo.modify.container ~ "-modify-dir"
          }
        }
      %}
      {% endif %}
      {% set _ = item.update(modify) %}
      {% set _ = original['parameter_defaults']['ContainerImagePrepare'].append(item) %}
      {{ original | to_nice_yaml }}
    dest: "{{ ansible_env.HOME }}/containers-prepare-parameter-copy.yaml"

- name: execute 'openstack tripleo container image prepare'
  command: openstack tripleo container image prepare -e /home/stack/containers-prepare-parameter-copy.yaml --output-env-file /home/stack/prepare_output.yaml --log-file /var/log/tripleo-container-image-prepare.log --debug
  register: openstack_tripleo_container_image_prepare
  become: true

- name: get container image configuration for {{ test.tripleo.modify.container }}
  shell: grep {{ test.tripleo.modify.container }} ~/prepare_output.yaml | grep -v Ironic
  register: container_image_configuration
  failed_when: '"-hotfix" not in container_image_configuration.stdout'

- name: write container image configuration for {{ test.tripleo.modify.container  }} to hotfix.yaml
  blockinfile:
    create: yes
    path: "~/hotfix.yaml"
    block: |
       parameter_defaults:
       {{ container_image_configuration.stdout }}

- name: OSP14 registry test
  when: rhosp_version|int == 14
  block:
    - name: replace remote registry to local insecure
      replace:
        path: ~/hotfix.yaml
        regexp: 'registry.access.redhat.com'
        replace: '{{ ansible_br_ctlplane.ipv4.address }}:8787'
    - name: pull modified docker image to local registry
      docker_image:
        name: "{{ ansible_br_ctlplane.ipv4.address }}:8787/rhosp{{ rhosp_version }}/openstack-{{ test.tripleo.modify.container }}:latest-hotfix"

- name: OSP15+ registry test
  when: rhosp_version|int > 14
  block:
    - name: Fetch registry host information
      slurp:
        src: /etc/httpd/conf.d/image-serve.conf
      register: slurp_image_serve
    - name: Parse registry host
      set_fact:
        image_serve_host: "{{ slurp_image_serve['content'] | b64decode | regex_search('<VirtualHost (.*):8787>') | regex_replace('<VirtualHost (.*):8787>', '\\1') }}"
    - name: pull modified podman image to local registry
      shell: "podman pull {{ image_serve_host }}:8787/rhosp{{ rhosp_version }}/openstack-{{ test.tripleo.modify.container }}:{{ tag | replace('tag: ', '')}}-hotfix"
      become: yes

- name: Create overcloud deploy command including the hotfix.yaml
  include: ../common/append_env_to_script.yml
  loop_control:
    loop_var: confchange
  with_items:
    - step: "update {{ test.tripleo.modify.container }} overcloud image"
      script: "~/overcloud_modify_image.sh"
      environment_file:
        - "~/hotfix.yaml"
